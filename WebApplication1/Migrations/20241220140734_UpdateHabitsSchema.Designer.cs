// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApplication1.repository;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241220140734_UpdateHabitsSchema")]
    partial class UpdateHabitsSchema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.model.Habits", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Habits", (string)null);

                    b.HasDiscriminator().HasValue("Habits");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("WebApplication1.model.RecordOfExecution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("ActualValue")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CompletionTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("HabitsId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Record", (string)null);
                });

            modelBuilder.Entity("WebApplication1.model.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Lastname")
                        .HasColumnType("text");

                    b.Property<string>("Login")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("WebApplication1.model.BadHabits", b =>
                {
                    b.HasBaseType("WebApplication1.model.Habits");

                    b.Property<string>("Penalty")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("BadHabits");
                });

            modelBuilder.Entity("WebApplication1.model.GoodHabits", b =>
                {
                    b.HasBaseType("WebApplication1.model.Habits");

                    b.Property<string>("Reward")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("GoodHabits");
                });

            modelBuilder.Entity("WebApplication1.model.Habits", b =>
                {
                    b.HasOne("WebApplication1.model.User", "User")
                        .WithMany("Habits")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebApplication1.model.RecordOfExecution", b =>
                {
                    b.HasOne("WebApplication1.model.User", null)
                        .WithMany("RecordOfExecutions")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("WebApplication1.model.User", b =>
                {
                    b.Navigation("Habits");

                    b.Navigation("RecordOfExecutions");
                });
#pragma warning restore 612, 618
        }
    }
}
